
07/23/2021
Topics: ArrayList

package name: day35_ArrayList

1. create an array of LocalDate and has the next 10 day's dates, use for each loop to print each Date in the following formar:
                MonthName/Day, Day Name

                ex:
                    November/25, Wednesday



Data Structures:
	Array: size is fixed. supports primitives & non-primitives
	Collection: size is dynamic (automatically adjusted). ONLY supports non-primitves
	Map:



ArrayList: part of Collection. is a class internally uses the array (has index)


ArrayList methods:
		add(Object):  adds the elements to the indexes of the arraylist
                    to add elements to the ArrayList, use the add() method

		add(index, Object):(overloadingMethod) adds the element to the given index (index must be exist)

		get(index): returns the element at given index
                    To access an element in the ArrayList,
                     use the get() method and refer to the index number:
                     cars.get(0);

		size(): returns the total number of elements
                To find out how many elements an ArrayList have, use the size method:
                cars.size();


		set(index, Object): replaces the old element at given index with new element
                          To modify an element, use the set() method and refer to the index number:
		                   cars.set(0, "Opel");


		remove(index): removes the object at the given index
                      To remove an element, use the remove() method and refer to the index number:
                     cars.remove(0);

		remove(object): removes the first matching object

		clear(): removes all the objects from the List: cars.remove(0);

		indexOf(Object): returns the first matching object' index number

		lastIndexOf(object): returns the last matching object' index number

		contains(Object): checks if the object is contained in the list

		equals(list): returns boolean

Bulk Operations: argument MUST be collectionType
		addAll(collectionType): adds collection of elements to the list
		removeAll(collectionType): removes all the matching elemnts from the arraylist
		retianAll(collectionType): removes all the Non-matching elemnts from the arraylist (keep)
		containsAll(collectionType): checks if all elemnts are contained in the list



Arrays Utility:
	Arrays.asList(array of values) ==> returns the array as Collection Type



come back at: 2:10 pm
